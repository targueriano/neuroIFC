<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated with glade 3.18.3 -->
<interface>
  <requires lib="gtk+" version="3.12"/>
  <object class="GtkListStore" id="liststore1">
    <columns>
      <!-- column-name Multi-layer -->
      <column type="gchararray"/>
    </columns>
    <data>
      <row>
        <col id="0" translatable="yes">A topologia perceptron de duas ou mais camadas difere da SLP por apresentar no mí-
nimo duas camadas adaptativas. A solução de problemas não lineares é possível em virtude
das funções de ativação de cada neurônio e da composição da sua estrutura em camadas suces-
sivas.</col>
      </row>
      <row>
        <col id="0" translatable="yes">O grande problema de uma MLP é calcular ou estimar o erro das camadas intermediárias.</col>
      </row>
      <row>
        <col id="0" translatable="yes">A solução desse problema surgiu com o algoritmo de retropropagação de erros ou back-
propagation. Esse algoritmo realiza o cálculo do erro das camadas ocultas a partir de uma es-
timativa do efeito que estas causam no erro da camada de saída. Dessa forma, o erro da saída
da rede é calculado e retroalimentado para as camadas intermediárias, oportunizando ajustes de
pesos proporcionais aos valores das conexões entre camadas.</col>
      </row>
      <row>
        <col id="0" translatable="yes">O backpropagation faz uso do gradiente descendente para efetuar os ajustes dos pesos.
A utilização do gradiente requer o uso de funções de ativação contínuas e diferenciáveis. Uma das funções mais comuns para a configuração da rede MLP é a sigmóide.</col>
      </row>
    </data>
  </object>
  <object class="GtkListStore" id="liststore2">
    <columns>
      <!-- column-name Perceptron -->
      <column type="gchararray"/>
    </columns>
    <data>
      <row>
        <col id="0" translatable="yes">O perceptron de uma camada foi proposto por Frank Rosenblatt, em 1958. O seu modelo 
era composto por uma estrutura de rede, tendo como unidades básicas neurônios de MaCulloch e 
Pitts (MCP), e por uma regra de aprendizado. A contribuição de Rosenblatt com o perceptron é
o conceito de aprendizado em uma rede neural artificial, pois antes acreditava-se na máquina
inteligente por meio de operadores lógicos básicos. Além do perceptron, Frank Rosenblatt demonstrou
que um neurônio MCP treinado com o algoritmo de treinamento proposto por ele sempre converge caso
o problema seja linearmente separável. Essa demonstração é conhecida como teorema da convergência.
A topologia original do perceptron é composta por unidades de entrada, de associação e de resposta.
A unidade de resposta é a única que apresenta atributos adaptativos ou moldáveis, por essa razão
nomeia-se perceptron de uma única camada (Single-layer perceptron).
</col>
      </row>
    </data>
  </object>
  <object class="GtkWindow" id="window1">
    <property name="can_focus">False</property>
    <property name="title" translatable="yes">Information</property>
    <property name="default_width">800</property>
    <property name="default_height">600</property>
    <property name="icon_name">accessories-dictionary</property>
    <signal name="destroy-event" handler="gtk_main_quit" swapped="no"/>
    <child>
      <object class="GtkBox" id="box1">
        <property name="visible">True</property>
        <property name="can_focus">False</property>
        <property name="orientation">vertical</property>
        <child>
          <object class="GtkPaned" id="paned1">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <child>
              <object class="GtkImage" id="image1">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="pixbuf">../pictures/backpropagation_fluxo.png</property>
              </object>
              <packing>
                <property name="resize">False</property>
                <property name="shrink">True</property>
              </packing>
            </child>
            <child>
              <object class="GtkImage" id="image2">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="pixbuf">../pictures/modelo_perceptron.png</property>
              </object>
              <packing>
                <property name="resize">True</property>
                <property name="shrink">True</property>
              </packing>
            </child>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">0</property>
          </packing>
        </child>
        <child>
          <object class="GtkNotebook" id="notebook1">
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <child>
              <object class="GtkScrolledWindow" id="scrolledwindow2">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="shadow_type">in</property>
                <child>
                  <object class="GtkTreeView" id="treeview1">
                    <property name="visible">True</property>
                    <property name="can_focus">True</property>
                    <property name="margin_left">10</property>
                    <property name="margin_right">10</property>
                    <property name="margin_bottom">10</property>
                    <property name="hexpand">True</property>
                    <property name="vexpand">True</property>
                    <property name="model">liststore1</property>
                    <property name="hover_selection">True</property>
                    <child internal-child="selection">
                      <object class="GtkTreeSelection" id="treeview-selection1"/>
                    </child>
                    <child>
                      <object class="GtkTreeViewColumn" id="treeviewcolumn1">
                        <property name="resizable">True</property>
                        <property name="sizing">autosize</property>
                        <property name="title" translatable="yes">Multi-layer perceptron</property>
                        <child>
                          <object class="GtkCellRendererText" id="cellrenderertext1">
                            <property name="background_gdk">#eeeeeeeeecec</property>
                          </object>
                          <attributes>
                            <attribute name="text">0</attribute>
                          </attributes>
                        </child>
                      </object>
                    </child>
                  </object>
                </child>
              </object>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="label1">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="label" translatable="yes">Sobre Backpropagation</property>
              </object>
              <packing>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <object class="GtkTreeView" id="treeview2">
                <property name="visible">True</property>
                <property name="can_focus">True</property>
                <property name="margin_left">10</property>
                <property name="margin_right">10</property>
                <property name="margin_bottom">10</property>
                <property name="model">liststore2</property>
                <property name="hover_selection">True</property>
                <property name="enable_grid_lines">horizontal</property>
                <child internal-child="selection">
                  <object class="GtkTreeSelection" id="treeview-selection2"/>
                </child>
                <child>
                  <object class="GtkTreeViewColumn" id="treeviewcolumn2">
                    <property name="resizable">True</property>
                    <property name="sizing">autosize</property>
                    <property name="title" translatable="yes">Perceptron</property>
                    <child>
                      <object class="GtkCellRendererText" id="cellrenderertext2">
                        <property name="background_gdk">#eeeeeeeeecec</property>
                      </object>
                      <attributes>
                        <attribute name="text">0</attribute>
                      </attributes>
                    </child>
                  </object>
                </child>
              </object>
              <packing>
                <property name="position">1</property>
              </packing>
            </child>
            <child type="tab">
              <object class="GtkLabel" id="label2">
                <property name="visible">True</property>
                <property name="can_focus">False</property>
                <property name="label" translatable="yes">Sobre Perceptron</property>
              </object>
              <packing>
                <property name="position">1</property>
                <property name="tab_fill">False</property>
              </packing>
            </child>
            <child>
              <placeholder/>
            </child>
            <child type="tab">
              <placeholder/>
            </child>
          </object>
          <packing>
            <property name="expand">True</property>
            <property name="fill">True</property>
            <property name="position">1</property>
          </packing>
        </child>
        <child>
          <object class="GtkButton" id="butAnimar">
            <property name="label" translatable="yes">Animação</property>
            <property name="visible">True</property>
            <property name="can_focus">True</property>
            <property name="receives_default">True</property>
            <property name="halign">start</property>
            <property name="margin_left">5</property>
            <property name="margin_top">5</property>
            <property name="margin_bottom">5</property>
            <property name="hexpand">True</property>
            <signal name="clicked" handler="on_butAnimar_clicked" swapped="no"/>
          </object>
          <packing>
            <property name="expand">False</property>
            <property name="fill">True</property>
            <property name="position">2</property>
          </packing>
        </child>
      </object>
    </child>
  </object>
</interface>
